- name: Install dependencies for setting up sources
  become: yes
  apt:
    name: "{{ packages }}"
    update_cache: yes
  vars:
    packages:
    - curl
    - gnupg2
    - lsb-release
    - software-properties-common

- name: Check if the universe repository is already configured
  shell: "grep -R '^deb .*universe' /etc/apt/sources.list /etc/apt/sources.list.d/"
  register: universe_repo_check
  ignore_errors: yes
  changed_when: false  # Prevents marking this task as "changed" if no match is found

- name: Enable ubuntu universe repository
  become: yes
  shell: "add-apt-repository universe -y"
  when: universe_repo_check.rc != 0  # Only add if the grep command didn't find any matching repo

- name: Update Apt
  become: true
  apt:
    upgrade: yes
    force_apt_get: true
    update_cache: true
    state: present

# curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | sudo apt-key add -
- name: Setup ROS keys
  become: yes
  ansible.builtin.apt_key:
    url: "{{ ros_gpg_key_url }}"

      # sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'
- name: Setup ROS sources
  become: yes
  apt_repository:
    repo: deb {{ ros_repository_url }} {{ ansible_distribution_release }} main
    state: present
    filename: ros

# sudo apt install ros-<distro>-ros-base
- name: Install ROS
  become: yes
  apt:
    name: "{{ packages }}"
    update_cache: yes
  vars:
    packages:
      - "{{ 'ros-' + ros_distribution + '-' + ros_configuration }}"

# sudo apt install python3-argcomplete
- name: Install rosdep (optional)
  become: yes
  apt:
    name: python3-rosdep

- name: Install rosinstall
  become: yes
  apt:
    name: python3-rosinstall

- name: Install rosinstall generator
  become: yes
  apt:
    name: python3-rosinstall-generator

- name: Install wstool
  become: yes
  apt:
    name: python3-wstool

- name: Install build essential
  become: yes
  apt:
    name: build-essential
